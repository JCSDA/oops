minimal:
  req_float_parameter: 3
  req_duration_parameter: PT1H
full:
  # These parameters must be specified in the order the corresponding
  # Parameter objects are declared in the C++ file; otherwise the
  # serialization test, which isn't very sophisticated and simply relies
  # on a string comparison, will fail.
  float_parameter: 3.5
  int_parameter: 4
  bool_parameter: false
  opt_float_parameter: 5.5
  opt_date_time_parameter: 2010-02-03T04:05:06Z
  opt_duration_parameter: PT1H2M3S
  opt_partialDT_parameter: "2010-**-03T04:05:06Z"
  fruit_parameter: apple
  range_parameter:
    min: 7
    max: 8.5
  int_parameters: [1, 2]
  pair_parameters:
  - 5
  - oranges
  range_parameters:
    - min: 9
      max: 10
    - min: 11
      max: 12
  obs_variables_parameter: [u, v]
  channels: 5,6,7 # used by the parameter storing an ObsVariables object
  variables_parameter: ["air_temperature", "air_pressure"]
  set_int_parameter: 2,4,5,6,8
  any_of_parameter: dog
  opt_any_of_parameter: [1, 2, 3, 4]
  opt_null_parameter: null
  embedded_int_parameter: 13
  opt_embedded_date_time_parameter: 2010-03-04T05:06:07Z
  req_float_parameter: 6
  req_duration_parameter: PT6H30M
alternative:
  float_parameter: 13.5
  int_parameter: 14
  bool_parameter: true
  opt_float_parameter: 15.5
  opt_date_time_parameter: 2010-02-13T04:05:06Z
  opt_duration_parameter: PT11H02M03S
  req_float_parameter: 16
  req_duration_parameter: PT16H30M
  fruit_parameter: orange
  range_parameter:
    min: 17
    max: 18.5
  int_parameters: [11, 12]
  range_parameters:
    - min: 19
      max: 110
    - min: 111
      max: 112
  embedded_int_parameter: 23
  opt_embedded_date_time_parameter: 2010-03-14T05:06:17Z
  set_int_parameter: 3
  any_of_parameter: [1, 3, 5]
  opt_any_of_parameter: cat
  opt_null_parameter:
misspelled_float:
  float_parometer: 3.5
misspelled_int:
  int_parometer: 4
misspelled_bool:
  bool_parometer: false
misspelled_dt:
  opt_date_time_parometer: 2010-02-03T04:05:06Z
misspelled_dur:
  opt_duration_parometer: PT01H02M03S
misspelled_fruit:
  fruit_parometer: apple
misspelled_ints:
  int_parometers: [1, 2]
misspelled_nested_param:
  range_parameter:
    min: 7
    mox: 8.5
misspelled_nested_params:
  range_parameters:
    - mon: 9
      max: 10
    - min: 11
      max: 12
misspelled_nesting_param:
  ronge_parameter:
    min: 7
    max: 8.5
underscores:
  # Parameters whose names start with underscores can be set to arbitrary values
  _: xyz
  _hidden:
    int: 125
    string: abc
  range_parameter:
    min: 7
    max: 10
    _: xyz
    _hidden:
      int: 125
      string: abc
error_in_float_parameter:
  float_parameter: ABCDEF
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_opt_float_parameter:
  opt_float_parameter: ABCDEF
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_opt_date_time_parameter:
  opt_date_time_parameter: ABCDEF
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_opt_duration_parameter:
  opt_duration_parameter: ABCDEF
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_opt_partialDT_parameter:
  opt_partialDT_parameter: ABCDEF
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_fruit_parameter:
  fruit_parameter: ABCDEF
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_int_parameters:
  int_parameters: ABCDEF
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_pair_parameters_singlevalue:
  pair_parameters: single value
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_pair_parameters_toofew:
  pair_parameters: [single value]
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_pair_parameters_wrongtypes:
  pair_parameters: ["string", 10]
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_pair_parameters_toomany:
  pair_parameters:
  - 10
  - apples
  - up on top
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_range_parameters:
  range_parameters: ABCDEF
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_set_int_parameter:
  set_int_parameter: 1-
  req_float_parameter: 3
  req_duration_parameter: PT1H
error_in_any_of_parameter:
  any_of_parameter: [abc, def]
missing_req_float_parameter:
  req_duration_parameter: PT1H
missing_req_duration_parameter:
  req_float_parameter: 3
# Commented because eckit fails to parse quoted key names
#map_parameter_yaml_style_quoted_keys:
#  int_to_float_map:
#    "5": 1.5
#    "7": 3
#  string_to_duration_map:
#    "day": PT16H
#    "night": PT8H
#  float_or_int_to_float_map_1:
#    "6": 2.5
#    "8": 4
#  duration_or_string_to_duration_map_1:
#    "day": PT14H
#    "night": PT10H
#  float_or_int_to_float_map_2: 3.5
#  duration_or_string_to_duration_map_2: PT12H
map_parameter_yaml_style_unquoted_keys:
  int_to_float_map:
    5: 1.5
    7: 3
  string_to_duration_map:
    day: PT16H
    night: PT8H
  float_or_int_to_float_map_1:
    6: 2.5
    8: 4
  duration_or_string_to_duration_map_1:
    day: PT14H
    night: PT10H
  float_or_int_to_float_map_2: 3.5
  duration_or_string_to_duration_map_2: PT12H
map_parameter_json_style_quoted_keys:
  # These parameters must be specified in the order the corresponding
  # Parameter objects are declared in the C++ file; otherwise the
  # serialization test, which isn't very sophisticated and simply relies
  # on a string comparison, will fail.
  int_to_float_map: { "5": 1.5, "7": 3 }
  string_to_duration_map: { "day": PT16H, "night": PT8H }
  float_or_int_to_float_map_1: { "6": 2.5, "8": 4 }
  duration_or_string_to_duration_map_1: { "day": PT14H, "night": PT10H }
  float_or_int_to_float_map_2: 3.5
  duration_or_string_to_duration_map_2: PT12H
map_parameter_json_style_unquoted_keys:
  int_to_float_map: { 5: 1.5, 7: 3 }
  string_to_duration_map: { day: PT16H, night: PT8H }
  float_or_int_to_float_map_1: { 6: 2.5, 8: 4 }
  duration_or_string_to_duration_map_1: { day: PT14H, night: PT10H }
  float_or_int_to_float_map_2: 3.5
  duration_or_string_to_duration_map_2: PT12H
map_parameter_empty:
  # These parameters must be specified in the order the corresponding
  # Parameter objects are declared in the C++ file; otherwise the
  # serialization test, which isn't very sophisticated and simply relies
  # on a string comparison, will fail.
  int_to_float_map: {}
  string_to_duration_map: {}
  float_or_int_to_float_map_1: {}
  duration_or_string_to_duration_map_1: {}
  float_or_int_to_float_map_2: {}
  duration_or_string_to_duration_map_2: {}
set_int_single_number:
  set_int_parameter: 5
set_int_range:
  set_int_parameter: 3-5
set_int_multiple_numbers_and_ranges:
  set_int_parameter: 13,3-5,7, 10-11
set_int_invalid_range:
  set_int_parameter: 13,3-x
variables_without_channels:
  # The filter variables are not ordered alphabetically: this is by design, to test if their
  # order is preserved during serialization.
  filter_variables: [air_temperature, air_pressure]
  operator_variables: [relative_humidity]
variables_with_channels:
  filter_variables: [air_temperature, air_pressure]
  channels: 5,6,7
  operator_variables: [relative_humidity]
device:
  # These parameters must be specified in the order the corresponding
  # Parameter objects are declared in the C++ file; otherwise the
  # serialization test, which isn't very sophisticated and simply relies
  # on a string comparison, will fail.
  required_device:
    type: screen
    diameter: 30
  device_with_default:
    type: printer
    paper_format: A3
  optional_device:
    type: printer
    paper_format: Letter
alternative_device:
  optional_device:
    type: screen
    diameter: 40
  required_device:
    type: printer
    paper_format: A5
  device_with_default:
    type: screen
    diameter: 20
device_with_default_not_set:
  device_with_default: {}
  optional_device: {}
  required_device:
    diameter: 30
    type: screen
optional_device_not_set:
  device_with_default: {}
  optional_device: {}
  required_device:
    diameter: 30
    type: screen
required_device_not_set:
  device_with_default: {}
  optional_device: {}
  required_device: {}
invalid_type_of_device_with_default:
  device_with_default:
    diameter: 30
    type: ABCDEF
  required_device:
    diameter: 30
    type: screen
invalid_type_of_optional_device:
  optional_device:
    diameter: 30
    type: ABCDEF
  required_device:
    diameter: 30
    type: screen
invalid_type_of_required_device:
  required_device:
    diameter: 30
    type: ABCDEF
misspelled_diameter_of_optional_device:
  optional_device:
    diamester: 30
    type: screen
  required_device:
    diameter: 30
    type: screen
misspelled_diameter_of_device_with_default:
  device_with_default:
    diamester: 30
    type: screen
  required_device:
    diameter: 30
    type: screen
misspelled_diameter_of_required_device:
  required_device:
    diamester: 30
    type: screen
constraints_met:
  int_with_min: 5
  int_with_exclusive_min: 6
  int_with_max: 5
  int_with_exclusive_max: 4
  float_with_min: 5.5
  float_with_exclusive_min: 6
  float_with_max: 5.5
  float_with_exclusive_max: 5
int_min_constraint_not_met:
  int_with_min: 4 # violates constraint
  int_with_exclusive_min: 6
  int_with_max: 5
  int_with_exclusive_max: 4
  float_with_min: 5.5
  float_with_exclusive_min: 6
  float_with_max: 5.5
  float_with_exclusive_max: 5
float_min_constraint_not_met:
  float_with_min: 5 # violates constraint
  int_with_min: 5
  int_with_exclusive_min: 6
  int_with_max: 5
  int_with_exclusive_max: 4
  float_with_exclusive_min: 6
  float_with_max: 5.5
  float_with_exclusive_max: 5
int_exclusive_min_constraint_not_met:
  int_with_exclusive_min: 5 # violates constraint
  int_with_min: 5
  int_with_max: 5
  int_with_exclusive_max: 4
  float_with_min: 5.5
  float_with_exclusive_min: 6
  float_with_max: 5.5
  float_with_exclusive_max: 5
float_exclusive_min_constraint_not_met:
  float_with_exclusive_min: 5.5 # violates constraint
  int_with_min: 5
  int_with_exclusive_min: 6
  int_with_max: 5
  int_with_exclusive_max: 4
  float_with_min: 5.5
  float_with_max: 5.5
  float_with_exclusive_max: 5
int_max_constraint_not_met:
  int_with_max: 6 # violates constraint
  int_with_min: 5
  int_with_exclusive_min: 6
  int_with_exclusive_max: 4
  float_with_min: 5.5
  float_with_exclusive_min: 6
  float_with_max: 5.5
  float_with_exclusive_max: 5
float_max_constraint_not_met:
  float_with_max: 6 # violates constraint
  int_with_min: 5
  int_with_exclusive_min: 6
  int_with_max: 5
  int_with_exclusive_max: 4
  float_with_min: 5.5
  float_with_exclusive_min: 6
  float_with_exclusive_max: 5
int_exclusive_max_constraint_not_met:
  int_with_exclusive_max: 5 # violates constraint
  int_with_min: 5
  int_with_exclusive_min: 6
  int_with_max: 5
  float_with_min: 5.5
  float_with_exclusive_min: 6
  float_with_max: 5.5
  float_with_exclusive_max: 5
float_exclusive_max_constraint_not_met:
  float_with_exclusive_max: 5.5 # violates constraint
  int_with_min: 5
  int_with_exclusive_min: 6
  int_with_max: 5
  int_with_exclusive_max: 4
  float_with_min: 5.5
  float_with_exclusive_min: 6
  float_with_max: 5.5
